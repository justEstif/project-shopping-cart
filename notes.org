* TODO
** TODO write more tests
- [ ] I need to figure out how to test react better
** TODO appearance
- [-] footer component?
- [-] keep track of the current active page ~useParams~
  - [-] to update the icons
  - [ ] conditional rendering
** TODO add a way to adjust the quantity of the item
- [X] before adding to cart
- [ ] while in cart
  - [ ] if the users sets it to 0 remove it?
** DONE report the current items in the cart
- [ ] the items in cart and the number of items in the cart should be in state
  - [ ] count is shared with the navigation bar
  - [ ] items is shared between App and Cart
- [ ] I need to understand use effect
** DONE add a next button in checkout
- [ ] handle if there is nothing in the cart
- [ ] create cart after button is clicked
** DONE create a index.js in every folder for easy import
- [ ] index.js in the components

* What to do
- Make a way to adjust the number of items to add to the cart
- disable button when quantity === 0
- I need to be able to remove items from cart and adjust the quantity
- I need to import to create some object that keeps track of the items in the shop, with all the proper details
  - I could create an Items component which has the items object and an item component which create the boxes for individual items
- the Item component needs to show the item and include another component for adjusting the number of items
  - we can make this something that is controlled in the cart
- i need to pass the item with the price and quantity
  - if the item exists in the array, increase the quantity
- why do I need components that just pass the value to the next component?
  - like shop page simply passing to Items?
- refactor the entire ~item.js~
* File Structure
- src
  - components
    - Cart
      - [ ] move it all to the ShopPage
      - [ ]
      - outputs multiple CartItems
      - final total Prices of Items in cart
      - there is duplication in the way total is found
        - should we just add the total of the items?
    - CartButton
      - conditional rendering a Remove or Add submit buttons with the right fonts
      - currenly using a boolean to determine which button to return
    - CartItem
      - uses Quantity and CartButton components
      - needs refactoring
      - handleClick, handleChange, handleSubmit functions
    - Header
      - returns the NavBar (which should be its name)
      - the only component tested properly
    - Item
      - return Item, well designed
      - needs testing for the different functions
      - uses Quantity and CartButton like CartItem
        - needs refactoring to make sure they work as intended
    - Items
      - should be moved into the ShopPage
      - returns multiple Item components
    - Quantity
      - returns  + and - and input for the count
      - figure out better name and handling changes
  - assets
  - pages
    - ShopPage
      - Only uses Items Component
    - CartPage
      - Only uses Cart Component
